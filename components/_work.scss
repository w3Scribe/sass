@use "../utils/_index.sass" as *;

body {
  height: 100vh;
}

.bg__blur {
  inset: 0;
  width: 100vw;
  height: 100vh;
  position: fixed;
  background-color: var(--bgColor);
  background: linear-gradient(45deg, #000000, #0a0712);

  .shape {
    width: clamp(rem(200), 50vw, rem(440));
    aspect-ratio: 1;
    border-radius: 50%;
    position: absolute;
    opacity: 0.5;
    -webkit-backdrop-filter: blur(4rem);
            backdrop-filter: blur(4rem);
    -webkit-filter: blur(rem(40)) hue-rotate(360deg);
            filter: blur(rem(40)) hue-rotate(360deg);
    background-blend-mode: multiply;
  }
}

.bg__blur {
  .shape.active {
    animation: move 2000ms cubic-bezier(0.47, 0, 0.745, 0.715) reverse forwards;
  }
}

$clr_list: (#7bddfe, #ff0471, #2890ff, #6975fe, #04b4ff, #ff2828);
$shape_pos: (
  10vh 0 20vh 20vw,
  10vh 30vw 0 10vw,
  10vh 80vw 0 60vw,
  47vh 30vw 55vh 40vw,
  -20vh 0 -40vh 66vw,
  66vh 30vw 20vh 20vw
);

@each $clr in $clr_list {
  $index: index($clr_list, $clr);
  .shape-#{$index} {
    inset: nth($shape_pos, $index);
    background: linear-gradient(45deg, $clr, #04060a);
    -webkit-animation-delay: $index + 2ms;
            animation-delay: $index + 2ms;
  }
}

@-webkit-keyframes move {
  to {
    inset: 50vh 35vw;
    scale: 0.6;
    rotate: 360deg;
    border-radius: 20%;
    -webkit-filter: blur(rem(40)) hue-rotate(360deg);
            filter: blur(rem(40)) hue-rotate(360deg);
  }
}

@keyframes move {
  to {
    inset: 50vh 35vw;
    scale: 0.6;
    rotate: 360deg;
    border-radius: 20%;
    -webkit-filter: blur(rem(40)) hue-rotate(360deg);
            filter: blur(rem(40)) hue-rotate(360deg);
  }
}

.container {
  position: relative;
  width: clamp(rem(320), 50vw, rem(440));
  height: -webkit-min-content;
  height: -moz-min-content;
  height: min-content;
  padding: rem(20);
  background-color: transparent;
  -webkit-backdrop-filter: blur(4rem);
          backdrop-filter: blur(4rem);
  margin-inline: auto;
  inset: 20% 0 0 0;
  border: solid rgba(255, 255, 255, 0.2) rem(1);
  border-radius: rem(4);
}

.container__displays {
  @extend %grid;
  width: 100%;
  padding: rem(10);
  position: relative;
  height: -webkit-max-content;
  height: -moz-max-content;
  height: max-content;
  grid-template-rows: 
  minmax(rem(20), auto) 
  minmax( rem(35), auto);

  border: solid rem(1) rgba(255, 255, 255, 0.2);
}

.display {
  width: 100%;
  text-align: right;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;

  &:nth-child(1) {
    color: rgba(255, 255, 255, 0.4);
    font-size: var(--fs-300);
  }
  &:nth-child(2) {
    color: rgba(255, 255, 255, 0.8);
    font-size: var(--fs-400);
    font-stretch: condensed;
    overflow-x: scroll; 
  }

  &::-webkit-scrollbar{
    display: none;
  }
}




.container__btns{
  -webkit-margin-before: rem(10);
          margin-block-start: rem(10);
  width: 100%;
  height: -webkit-max-content;
  height: -moz-max-content;
  height: max-content;
  text-align: center;
   
  display: grid;
  gap:rem(10);
  justify-content: space-evenly;
  grid-template-columns: repeat(4,1fr);

  button{
    color: white;
    padding: rem(5);
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    border: solid rem(1) rgba(255, 255, 255, 0.1);
    transition: all 50ms ease-in-out;
  }

  button.num{
    color: rgba(255, 255, 255, 0.4);
    &:active{
      color: white;
    }
  }

  button:is(:active){
    background-color: rgba(255, 255, 255, 0.1);
  }
  
}   
